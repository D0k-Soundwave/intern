name: MCP Integration Analysis

on:
  push:
    paths:
      - 'Docs/**/*.md'
      - 'src/mcp/**'
      - '.github/workflows/mcp-analysis.yml'
  pull_request:
    paths:
      - 'Docs/**/*.md'
      - 'src/mcp/**'
  workflow_dispatch:

jobs:
  analyze-mcp-integration:
    runs-on: ubuntu-latest
    name: Analyze MCP Integration System
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Analyze MCP Protocol Compliance
        uses: anthropics/claude-code-action@main
        with:
          task: |
            Analyze the MCP integration system in this repository:
            1. Check MCP protocol compliance per Docs/4. MCP_requirements.md
            2. Verify stdio/JSON-RPC implementation correctness
            3. Validate category scanner coverage (all 76 categories)
            4. Check interview-based routing logic
            5. Verify response transformation pipeline
            
            Report any issues or improvements needed.
          files: |
            Docs/4. MCP_requirements.md
            Docs/7. MCP_Claude_Code_Integration.md
            Docs/full_plan.md
      
      - name: Generate Compliance Report
        uses: anthropics/claude-code-action@main
        with:
          task: |
            Generate a compliance report for the MCP integration:
            - Protocol version compatibility (2024-11-05)
            - Tool registration completeness
            - Response format validation
            - Error handling coverage
            
            Create report as markdown comment.
          output: mcp-compliance-report.md
      
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('mcp-compliance-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });